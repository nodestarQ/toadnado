/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { YourContract, YourContractInterface } from "../YourContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "greetingSetter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newGreeting",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "premium",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "GreetingChange",
    type: "event",
  },
  {
    inputs: [],
    name: "greeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "premium",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newGreeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userGreetingCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e0604052601c60a09081527f4275696c64696e6720556e73746f707061626c6520417070732121210000000060c0525f9061003b908261011d565b506001805460ff191690555f600255348015610055575f80fd5b50604051610a0a380380610a0a833981016040819052610074916101dc565b6001600160a01b0316608052610209565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806100ad57607f821691505b6020821081036100cb57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561011857805f5260205f20601f840160051c810160208510156100f65750805b601f840160051c820191505b81811015610115575f8155600101610102565b50505b505050565b81516001600160401b0381111561013657610136610085565b61014a816101448454610099565b846100d1565b602080601f83116001811461017d575f84156101665750858301515b5f19600386901b1c1916600185901b1785556101d4565b5f85815260208120601f198616915b828110156101ab5788860151825594840194600190910190840161018c565b50858210156101c857878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f602082840312156101ec575f80fd5b81516001600160a01b0381168114610202575f80fd5b9392505050565b6080516107dc61022e5f395f818160a30152818161019801526101fd01526107dc5ff3fe608060405260043610610071575f3560e01c8063a41368621161004c578063a413686214610105578063cea49c3c14610118578063e0a73a9314610143578063ef690cc01461016c575f80fd5b80633ccfd60b1461007c5780638da5cb5b1461009257806397feba9d146100e2575f80fd5b3661007857005b5f80fd5b348015610087575f80fd5b5061009061018d565b005b34801561009d575f80fd5b506100c57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ed575f80fd5b506100f760025481565b6040519081526020016100d9565b61009061011336600461048f565b6102b3565b348015610123575f80fd5b506100f761013236600461053a565b60036020525f908152604090205481565b34801561014e575f80fd5b5060015461015c9060ff1681565b60405190151581526020016100d9565b348015610177575f80fd5b50610180610381565b6040516100d991906105aa565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101fa5760405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329027bbb732b960991b60448201526064015b60405180910390fd5b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316476040515f6040518083038185875af1925050503d805f8114610263576040519150601f19603f3d011682016040523d82523d5f602084013e610268565b606091505b50509050806102b05760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016101f1565b50565b6102d660405180606001604052806021815260200161078660219139823361040c565b5f6102e1828261063f565b50600160025f8282546102f491906106ff565b9091555050335f9081526003602052604081208054600192906103189084906106ff565b90915550503415610334576001805460ff19168117905561033f565b6001805460ff191690555b60405133907f94cbd7e04dca26a7667654f6448b2ca0a40fec602118dc5fd8c82b9cf3c645ad906103769084903480151591610724565b60405180910390a250565b5f805461038d906105bc565b80601f01602080910402602001604051908101604052809291908181526020018280546103b9906105bc565b80156104045780601f106103db57610100808354040283529160200191610404565b820191905f5260205f20905b8154815290600101906020018083116103e757829003601f168201915b505050505081565b61045383838360405160240161042493929190610748565b60408051601f198184030181529190526020810180516001600160e01b03166395ed019560e01b179052610458565b505050565b6102b0815f6a636f6e736f6c652e6c6f6790505f80835160208501845afa505050565b634e487b7160e01b5f52604160045260245ffd5b5f6020828403121561049f575f80fd5b813567ffffffffffffffff808211156104b6575f80fd5b818401915084601f8301126104c9575f80fd5b8135818111156104db576104db61047b565b604051601f8201601f19908116603f011681019083821181831017156105035761050361047b565b8160405282815287602084870101111561051b575f80fd5b826020860160208301375f928101602001929092525095945050505050565b5f6020828403121561054a575f80fd5b81356001600160a01b0381168114610560575f80fd5b9392505050565b5f81518084525f5b8181101561058b5760208185018101518683018201520161056f565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f6105606020830184610567565b600181811c908216806105d057607f821691505b6020821081036105ee57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561045357805f5260205f20601f840160051c810160208510156106195750805b601f840160051c820191505b81811015610638575f8155600101610625565b5050505050565b815167ffffffffffffffff8111156106595761065961047b565b61066d8161066784546105bc565b846105f4565b602080601f8311600181146106a0575f84156106895750858301515b5f19600386901b1c1916600185901b1785556106f7565b5f85815260208120601f198616915b828110156106ce578886015182559484019460019091019084016106af565b50858210156106eb57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b8082018082111561071e57634e487b7160e01b5f52601160045260245ffd5b92915050565b606081525f6107366060830186610567565b93151560208301525060400152919050565b606081525f61075a6060830186610567565b828103602084015261076c8186610567565b91505060018060a01b038316604083015294935050505056fe53657474696e67206e6577206772656574696e6720272573272066726f6d202573a2646970667358221220f1914345cd652f47b97583519a5ebb632b1a630fa1c5daaab8b614b91ea9c90964736f6c63430008170033";

type YourContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YourContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YourContract__factory extends ContractFactory {
  constructor(...args: YourContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      YourContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): YourContract__factory {
    return super.connect(runner) as YourContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourContractInterface {
    return new Interface(_abi) as YourContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): YourContract {
    return new Contract(address, _abi, runner) as unknown as YourContract;
  }
}
