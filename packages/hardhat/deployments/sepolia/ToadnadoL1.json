{
  "address": "0x8a537e3C5d694A4FBe2B516d03568D0da824De0B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_verifier",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "VerificationFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "commitmentsTree",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "commitmentsTreeRoots",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "commitment",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nullifiers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_commitmentsTree",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "setCommitmentsTree",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "nullifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "snarkProof",
          "type": "bytes"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4d0eb46aca46a844030cd3fdc584e077edd9907e23e4217110fbacf159626d52",
  "receipt": {
    "to": null,
    "from": "0x794464c8c91A2bE4aDdAbfdB82b6db7B1Bb1DBC7",
    "contractAddress": "0x8a537e3C5d694A4FBe2B516d03568D0da824De0B",
    "transactionIndex": 76,
    "gasUsed": "338526",
    "logsBloom": "0x
    "blockHash": "0x30d3a38f2e2c9d1b5fbb336bccdbbb92e632bbe2b1942c29d2e0a1c13c11b85b",
    "transactionHash": "0x4d0eb46aca46a844030cd3fdc584e077edd9907e23e4217110fbacf159626d52",
    "logs": [],
    "blockNumber": 6298673,
    "cumulativeGasUsed": "12165981",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x794464c8c91A2bE4aDdAbfdB82b6db7B1Bb1DBC7"
  ],
  "numDeployments": 1,
  "solcInputHash": "5786f1fe4dc338005ca6f4a83e779abd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verifier\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"VerificationFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"commitmentsTree\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"commitmentsTreeRoots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nullifiers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_commitmentsTree\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"setCommitmentsTree\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"snarkProof\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ToadnadoL1.sol\":\"ToadnadoL1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ToadnadoL1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.23;\\n\\ninterface IVerifier {\\n    function verify(\\n        bytes calldata _proof,\\n        bytes32[] calldata _publicInputs\\n    ) external view returns (bool);\\n}\\nerror VerificationFailed();\\n\\ncontract ToadnadoL1 {\\n\\n    constructor(address _verifier) {\\n        verifier = _verifier;\\n    }\\n\\n    // contract that verifies the zkSnark proof\\n    address public verifier;\\n\\n    // nullifiers of the l1Withdraws\\n    // its a identiefier of a commitment(deposit) that is revealed when it is withdrawn\\n    // to prevent it being spend again\\n    mapping (bytes32 => bool) public nullifiers;\\n\\n    // a history of valid merkle roots, to verify that a proof refers to a valid deposit\\n    mapping (bytes32 => bool) public commitmentsTreeRoots;\\n\\n    //TODO find out depth and set array lenght to that as 2^depth\\n    // contains the entire current merkle tree from the commitements (leafs) to the root\\n    // ex at depth 1 (2 commitements)\\n    // [commitment1,commitment2, hash1atLevel1, hash2atLevel1, root]\\n    bytes32[] public commitmentsTree;\\n\\n\\n    function deposit(bytes32 commitment) public {\\n        //TODO update merkle tree\\n        //TODO get the eth (0.01 eth)\\n \\n    }\\n\\n    function withdraw(address to, bytes32 nullifier,uint256 chainId, bytes calldata snarkProof) public {\\n        bytes32[] memory publicInputs = _formatPublicInputs(to, nullifier, chainId);\\n        if (!IVerifier(verifier).verify(snarkProof, publicInputs)) {\\n            revert VerificationFailed();\\n        }\\n        //TODO send the money to \\\"to\\\"\\n        //TODO add nullifier\\n        //TODO checkChainID\\n    }\\n\\n    function _formatPublicInputs(address to, bytes32 nullifier,uint256 chainId) private returns(bytes32[] memory) {\\n\\n    }\\n\\n\\n    //TODO remove this\\n    //debug functions\\n    function setCommitmentsTree(bytes32[] calldata _commitmentsTree, bytes32 _root) public {\\n        commitmentsTree = _commitmentsTree;\\n        commitmentsTreeRoots[_root] = true;\\n    }\\n\\n\\n\\n\\n\\n\\n}\",\"keccak256\":\"0x31466cf3bae12b813dca2fa57c183b57f02230060128662dfb3c64488e7c5e3e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161054b38038061054b83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6104b8806100936000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80633990f65b1161005b5780633990f65b14610108578063621a52861461011d578063b214faa51461013e578063b85f26701461014f57600080fd5b80632997e86b146100825780632b7ac3f3146100ba5780633591d78d146100e5575b600080fd5b6100a56100903660046102a8565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6000546100cd906001600160a01b031681565b6040516001600160a01b0390911681526020016100b1565b6100a56100f33660046102a8565b60026020526000908152604090205460ff1681565b61011b6101163660046102c1565b610162565b005b61013061012b3660046102a8565b6101fd565b6040519081526020016100b1565b61011b61014c3660046102a8565b50565b61011b61015d366004610363565b61021e565b600054604051633a94343960e21b81526060916001600160a01b03169063ea50d0e490610197908690869086906004016103de565b602060405180830381865afa1580156101b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d89190610459565b6101f55760405163439cc0cd60e01b815260040160405180910390fd5b505050505050565b6003818154811061020d57600080fd5b600091825260209091200154905081565b61022a60038484610248565b506000908152600260205260409020805460ff191660011790555050565b828054828255906000526020600020908101928215610283579160200282015b82811115610283578235825591602001919060010190610268565b5061028f929150610293565b5090565b5b8082111561028f5760008155600101610294565b6000602082840312156102ba57600080fd5b5035919050565b6000806000806000608086880312156102d957600080fd5b85356001600160a01b03811681146102f057600080fd5b94506020860135935060408601359250606086013567ffffffffffffffff8082111561031b57600080fd5b818801915088601f83011261032f57600080fd5b81358181111561033e57600080fd5b89602082850101111561035057600080fd5b9699959850939650602001949392505050565b60008060006040848603121561037857600080fd5b833567ffffffffffffffff8082111561039057600080fd5b818601915086601f8301126103a457600080fd5b8135818111156103b357600080fd5b8760208260051b85010111156103c857600080fd5b6020928301989097509590910135949350505050565b60408152826040820152828460608301376000606084830101526000601f19601f85011682016060810160206060858403016020860152818651808452608085019150602088019450600093505b8084101561044c578451825293820193600193909301929082019061042c565b5098975050505050505050565b60006020828403121561046b57600080fd5b8151801515811461047b57600080fd5b939250505056fea26469706673582212208f89bd1afe6bd84459162ba564156e657e5b692533ad98a6a92f42cca7f5095664736f6c63430008170033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80633990f65b1161005b5780633990f65b14610108578063621a52861461011d578063b214faa51461013e578063b85f26701461014f57600080fd5b80632997e86b146100825780632b7ac3f3146100ba5780633591d78d146100e5575b600080fd5b6100a56100903660046102a8565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6000546100cd906001600160a01b031681565b6040516001600160a01b0390911681526020016100b1565b6100a56100f33660046102a8565b60026020526000908152604090205460ff1681565b61011b6101163660046102c1565b610162565b005b61013061012b3660046102a8565b6101fd565b6040519081526020016100b1565b61011b61014c3660046102a8565b50565b61011b61015d366004610363565b61021e565b600054604051633a94343960e21b81526060916001600160a01b03169063ea50d0e490610197908690869086906004016103de565b602060405180830381865afa1580156101b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d89190610459565b6101f55760405163439cc0cd60e01b815260040160405180910390fd5b505050505050565b6003818154811061020d57600080fd5b600091825260209091200154905081565b61022a60038484610248565b506000908152600260205260409020805460ff191660011790555050565b828054828255906000526020600020908101928215610283579160200282015b82811115610283578235825591602001919060010190610268565b5061028f929150610293565b5090565b5b8082111561028f5760008155600101610294565b6000602082840312156102ba57600080fd5b5035919050565b6000806000806000608086880312156102d957600080fd5b85356001600160a01b03811681146102f057600080fd5b94506020860135935060408601359250606086013567ffffffffffffffff8082111561031b57600080fd5b818801915088601f83011261032f57600080fd5b81358181111561033e57600080fd5b89602082850101111561035057600080fd5b9699959850939650602001949392505050565b60008060006040848603121561037857600080fd5b833567ffffffffffffffff8082111561039057600080fd5b818601915086601f8301126103a457600080fd5b8135818111156103b357600080fd5b8760208260051b85010111156103c857600080fd5b6020928301989097509590910135949350505050565b60408152826040820152828460608301376000606084830101526000601f19601f85011682016060810160206060858403016020860152818651808452608085019150602088019450600093505b8084101561044c578451825293820193600193909301929082019061042c565b5098975050505050505050565b60006020828403121561046b57600080fd5b8151801515811461047b57600080fd5b939250505056fea26469706673582212208f89bd1afe6bd84459162ba564156e657e5b692533ad98a6a92f42cca7f5095664736f6c63430008170033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/ToadnadoL1.sol:ToadnadoL1",
        "label": "verifier",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 30,
        "contract": "contracts/ToadnadoL1.sol:ToadnadoL1",
        "label": "nullifiers",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 34,
        "contract": "contracts/ToadnadoL1.sol:ToadnadoL1",
        "label": "commitmentsTreeRoots",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 37,
        "contract": "contracts/ToadnadoL1.sol:ToadnadoL1",
        "label": "commitmentsTree",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_bytes32)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}