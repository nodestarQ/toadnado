{"noir_version":"0.30.0+af57471035e4fa7eaffa71693219df6d029dbcde","hash":6125923565243839814,"abi":{"parameters":[{"name":"root","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"},{"name":"nullifierHash","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"},{"name":"recipient","type":{"kind":"field"},"visibility":"public"},{"name":"nullifierHashPreImage","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"secret","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"hash_path","type":{"kind":"array","length":7,"type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}}},"visibility":"private"},{"name":"hash_path_bools","type":{"kind":"array","length":7,"type":{"kind":"boolean"}},"visibility":"private"}],"param_witnesses":{"hash_path":[{"start":129,"end":353}],"hash_path_bools":[{"start":353,"end":360}],"nullifierHash":[{"start":32,"end":64}],"nullifierHashPreImage":[{"start":65,"end":97}],"recipient":[{"start":64,"end":65}],"root":[{"start":0,"end":32}],"secret":[{"start":97,"end":129}]},"return_type":null,"return_witnesses":[],"error_types":{}},"bytecode":"","debug_symbols":"zdjRSsMwFIDhd8n1LtIkJzlnryIiVacMRiduE2Ts3e3UTqHbwH/Icres+dtD+QqlW/c4u9883827p+XKTW+2brF8aNfzZdevti6Kff65emm7/Xq1bl/XbtqUZBM36x73P7PsJu5pvpi5acq724mL2ZOoIVEgUTwa6U+kln9Hk/HmRv2wOYQ8ukL69yvI5VcIOQybo0/nNwcdThxDGA2TaxqmHB3GwuH8pnL+/Grxe6+FcskoevEolnXY633gs8iJJ+UKt0VOPH/XuC1FqtFSpB4tJtVoMalHS9Okarj0s9TjpYmpGjD9LBWJkViPGIkViSnxqJjg/fDaE3zUcRVRlVAlqMqoKqhSVBmpkkdVgypkIyEbCdlIyEZCNhKykZCNhGwIsiHIhiAbgmwIsiHIhiAbgmwIsiHIRkY2MrKRkY2MbOQTNiQcqhLHlaAqo6qgSlFlpCoeVQ2qAqoiqpCNgmwUZKMgGwXZKMiGIhuKbCiyociGIhuKbCiyociGIhuKbBiyYciGIRuGbBiyYX+20S/e2td5e7+Y7T/z749tuofhq3+/XL+/fB3p934A","file_map":{"46":{"source":"use dep::std;\n\nglobal TREE_DEPTH = 7;\n\nfn hashKeccak2(first: [u8;32], second: [u8;32]) -> [u8;32] {\n    let mut preImage: [u8;64] = [0;64];\n\n    for i in 0 .. 32 {\n        preImage[i] = first[i];\n        \n    }\n    for i in 0 .. 32 {\n        preImage[i+32] = second[i];\n        \n    }\n    std::hash::keccak256(preImage,64)\n}\n\n// used merkle from noir std as example\n// https://github.com/noir-lang/noir/blob/49e1b0c0d45565f3e87469b77f2fef0c283f6ea1/noir_stdlib/src/merkle.nr#L5\n// Returns the merkle root of the tree from the provided leaf, its hashpath, domains, using a poseidon2 with the domain argument\nfn compute_merkle_root<N>(leaf_hash: [u8;32], hash_path: [ [u8;32]; N], hash_path_bools: [bool; N]) -> [u8;32] {\n    let n = hash_path.len();\n    let mut current = leaf_hash;\n    for i in 0..n {\n        let hash_right = hash_path_bools[i];\n        if hash_right {\n            current = hashKeccak2(hash_path[i], current);\n        } else {\n            current = hashKeccak2(current, hash_path[i]);\n        };\n        \n\n    }\n    current\n}\n\nfn commitmentHasher(nullifierHashPreImage: [u8;32], secret: [u8;32]) -> ([u8;32],[u8;32]) {\n    let computedNullifierHash:  [u8;32] = std::hash::keccak256(nullifierHashPreImage,32);\n    let commitmentHash:  [u8;32] =hashKeccak2(nullifierHashPreImage,secret );\n    (commitmentHash,computedNullifierHash)\n}\n\n\nfn main(\n    root:pub [u8;32],\n    nullifierHash:pub [u8;32], \n    recipient:pub Field, \n    //relayer:pub Field,\n    // fee:pub Field,\n    // refund:pub Field,\n    //chainId:pub Field,\n    \n    nullifierHashPreImage: [u8;32],\n    secret: [u8;32],\n    hash_path: [[u8;32];TREE_DEPTH],\n    hash_path_bools:  [bool; TREE_DEPTH],\n    ) {\n    // to make sure these are set and cant change\n    assert(recipient != 0x0);\n    //assert(chainId != 0x0);\n\n    let (commitmentHash, computedNullifierHash) = commitmentHasher(nullifierHashPreImage, secret);\n    let computed_root = compute_merkle_root(commitmentHash, hash_path, hash_path_bools);\n\n\n    assert(computedNullifierHash == nullifierHash);\n    assert(computed_root == root);\n}\n\n#[test]\nfn test_simple_merkle_proof() {\n    \n    let hash_path = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20],[79,194,254,145,132,162,95,68,206,141,219,95,50,103,31,202,230,217,200,94,215,16,193,153,172,239,22,173,22,178,153,17],[13,130,106,71,79,133,28,86,48,82,217,41,239,13,170,112,246,88,171,169,186,8,79,81,246,227,72,60,19,192,229,154],[247,118,26,22,181,228,192,18,14,76,87,4,185,16,219,225,143,246,22,42,150,104,237,28,44,78,253,231,196,241,88,6],[206,156,224,154,10,178,89,214,209,76,163,220,215,78,108,107,158,125,144,116,191,246,105,115,212,197,124,205,255,219,42,130],[2,239,212,76,99,1,95,241,56,83,68,224,98,72,103,119,84,134,208,94,110,177,41,10,36,151,105,100,165,152,0,59],[196,222,197,132,93,64,124,226,172,46,104,36,187,120,87,196,177,56,248,25,229,120,157,93,17,232,18,219,16,200,70,205]];\n    let leaf = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,0];\n    let real_root = [218,130,62,147,72,0,144,187,88,40,196,24,198,243,240,151,71,112,62,173,29,168,116,56,198,174,231,247,158,128,233,2];\n    let hash_path_bools = [true,false,false,false,false,false,false];\n    let root = compute_merkle_root(leaf,hash_path, hash_path_bools);\n    \n    // println(\"root\");\n    // println(root);\n    assert(root == real_root);\n}\n#[test]\nfn test_commitment_hasher() {\n    //[...crypto.getRandomValues(new Uint8Array(Array(32)))]\n    let nullifierHashPreImage = [214,255,124,83,114,187,12,181,14,111,72,234,5,249,135,238,141,197,183,240,45,224,153,161,158,69,230,216,57,122,75,68];\n    let secret = [230,146,124,238,124,120,160,205,44,185,238,166,139,63,96,30,207,97,7,85,117,207,245,240,45,97,6,100,229,191,245,27];\n\n    let (commitmentHash, computedNullifierHash) = commitmentHasher(nullifierHashPreImage, secret);\n    println(\"commitmentHash\");\n    println(commitmentHash);\n    println(\"computedNullifierHash\");\n    println(computedNullifierHash);\n\n    // ethers.hexlify(new Uint8Array(computedNullifierHash))\n}\n","path":"/home/jimjim/toadnado/circuits/prover/src/main.nr"}},"names":["main"]}