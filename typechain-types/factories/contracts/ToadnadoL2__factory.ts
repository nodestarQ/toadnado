/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ToadnadoL2,
  ToadnadoL2Interface,
} from "../../contracts/ToadnadoL2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_l2ScrollMessenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1ToadnadoAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "VerificationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifier",
        type: "uint256",
      },
    ],
    name: "PendingWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifier",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "bridgeEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "commitmentsTreeRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_preCommitment",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "ethPendingWithdrawals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "getL1Root",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_right",
        type: "uint256",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_root",
        type: "uint256",
      },
    ],
    name: "isKnownL1Root",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_root",
        type: "uint256",
      },
    ],
    name: "isKnownL2Root",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifierHash",
        type: "uint256",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_nullifierHashes",
        type: "uint256[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1ToadnadoAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ScrollMessenger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "l1_contract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
    ],
    name: "readSingleSlot",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recieveBridgedEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "requestEthBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
    ],
    name: "sendLatestRootToL1",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_l1root",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_l2root",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nullifier",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "snarkProof",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifier",
        type: "uint256",
      },
    ],
    name: "withdrawPending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "$75f79a42d9bcbdbb69ad79ebd80f556f39$__9163561558fe916107769160040161220a565b602060405180830381865af4158015610791573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107b5919061223a565b9050465f6107c6838989858a611ad9565b604051633a94343960e21b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ea50d0e49061081990889088908690600401612251565b602060405180830381865afa158015610834573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061085891906122c9565b6108755760405163439cc0cd60e01b815260040160405180910390fd5b5f888152600560205260409020805460ff19166001179055610898878988611bba565b5050506108a56001600455565b50505050505050565b604051606083811b6bffffffffffffffffffffffff1916602083015260348201839052905f9060540160405160208183030381529060405290505f60606101016001600160a01b03168360405161090591906122e8565b5f60405180830381855afa9150503d805f811461093d576040519150601f19603f3d011682016040523d82523d5f602084013e610942565b606091505b509092509050816109865760405162461bcd60e51b815260206004820152600e60248201526d130c54d313d0510819985a5b195960921b604482015260640161067a565b925050505b92915050565b5f81815260086020908152604091829020825160608101845281546001600160a01b031681526001808301549382019390935260029091015460ff1615159281018390529114610a235760405162461bcd60e51b815260206004820181905260248201527f5468697320776974686472617720697320616c726561647920636c61696d6564604482015260640161067a565b5f8281526008602090815260408220600201805460ff19169055820151600a805491929091610a53908490612317565b9091555050805160208201516040516001600160a01b039092169181156108fc0291905f818181858888f19350505050158015610a92573d5f803e3d5ffd5b508051604080516001600160a01b039092168252602082018490527f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65910160405180910390a15050565b5f815f03610aeb57505f919050565b5f610b177f000000000000000000000000000000000000000000000000000000000000000060036108ae565b806020019051810190610b2a919061232a565b9050805b610b3d8163ffffffff16610cb7565b8403610b4d575060019392505050565b8063ffffffff165f03610b5e5750601e5b80610b6881612345565b9150508163ffffffff168163ffffffff1603610b2e57505f9392505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bcf5760405162461bcd60e51b815260040161067a90612363565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c55573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c7991906123ab565b6001600160a01b031614610c9f5760405162461bcd60e51b815260040161067a906123c6565b34600a5f828254610cb09190612423565b9091555050565b5f610d167f0000000000000000000000000000000000000000000000000000000000000000836003604051602001610cf9929190918252602082015260400190565b604051602081830303815290604052805190602001205f1c6108ae565b80602001905181019061098b919061223a565b604080518082018252838152602081018390529051632b0aac7f60e11b81525f9173__$75f79a42d9bcbdbb69ad79ebd80f556f39$__9163561558fe91610d729160040161220a565b602060405180830381865af4158015610d8d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610db1919061223a565b9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b038116635f7b1577347f00000000000000000000000000000000000000000000000000000000000000005f610e2860035463ffffffff165f9081526002602052604090205490565b604051602401610e3a91815260200190565b60408051601f198184030181529181526020820180516001600160e01b0316636b91e4d560e01b1790525160e086901b6001600160e01b0319168152610e899392919089903390600401612436565b5f604051808303818588803b158015610ea0575f80fd5b505af11580156108a5573d5f803e3d5ffd5b610eba611aaf565b60408051808201825282815234602082018190529151632b0aac7f60e11b81525f9173__$75f79a42d9bcbdbb69ad79ebd80f556f39$__9163561558fe91610f049160040161220a565b602060405180830381865af4158015610f1f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f43919061223a565b5f8181526006602052604090205490915060ff1615610fb65760405162461bcd60e51b815260206004820152602960248201527f54686520636f6d6d69746d656e742068617320616c7265616479206265656e206044820152681cdd589b5a5d1d195960ba1b606482015260840161067a565b5f610fc082611d7a565b5f8381526006602052604090819020805460ff191660011790555190915082907f2813ca2762c14ad53880ef467c7448a9015904c20e064e6216ffb3f63390ec5d90611020908490429063ffffffff929092168252602082015260400190565b60405180910390a25050506110356001600455565b50565b5f61098b82611f3a565b6009546040805160248101839052604480820185905282518083039091018152606490910182526020810180516001600160e01b031663f8af86e760e01b1790529051635f7b157760e01b81527f0000000000000000000000000000000000000000000000000000000000000000916001600160a01b03831691635f7b1577915f916110f9917f0000000000000000000000000000000000000000000000000000000000000000918491908a90339060040161247d565b5f604051808303818588803b158015611110575f80fd5b505af1158015611122573d5f803e3d5ffd5b50505f600955505050505050565b5f815f0361113f57505f919050565b8160010361116e57507f2098f5fb9e239eab3ceac3f27b81e481dc3124d55ffed523a839ee8446b64864919050565b8160020361119d57507f1069673dcdb12263df301a6ff584a7ec261a44cb9dc68df067a4774460b1f1e1919050565b816003036111cc57507f18f43331537ee2af2e3d758d50f72106467c6eea50371dd528d57eb2b856d238919050565b816004036111fb57507f07f9d837cb17b0d36320ffe93ba52345f1b728571a568265caac97559dbc952a919050565b8160050361122a57507f2b94cf5e8746b3f5c9631f4c5df32907a699c58c94b2ad4d7b5cec1639183f55919050565b8160060361125957507f2dee93c5a666459646ea7d22cca9e1bcfed71e6951b953611d11dda32ea09d78919050565b8160070361128857507f078295e5a22b84e982cf601eb639597b8b0515a88cb5ac7fa8a4aabe3c87349d919050565b816008036112b757507f2fa5e5f18f6027a6501bec864564472a616b2e274a41211a444cbe3a99f3cc61919050565b816009036112e657507f0e884376d0d8fd21ecb780389e941f66e45e7acce3e228ab3e2156a614fcd747919050565b81600a0361131557507f1b7201da72494f1e28717ad1a52eb469f95892f957713533de6175e5da190af2919050565b81600b0361134457507f1f8d8822725e36385200c0b201249819a6e6e1e4650808b5bebc6bface7d7636919050565b81600c0361137357507f2c5d82f66c914bafb9701589ba8cfcfb6162b0a12acf88a8d0879a0471b5f85a919050565b81600d036113a257507f14c54148a0940bb820957f5adf3fa1134ef5c4aaa113f4646458f270e0bfbfd0919050565b81600e036113d157507f190d33b12f986f961e10c0ee44d8b9af11be25588cad89d416118e4bf4ebe80c919050565b81600f0361140057507f22f98aa9ce704152ac17354914ad73ed1167ae6596af510aa5b3649325e06c92919050565b8160100361142f57507f2a7c7c9b6ce5880b9f6f228d72bf6a575a526f29c66ecceef8b753d38bba7323919050565b8160110361145e57507f2e8186e558698ec1c67af9c14d463ffc470043c9c2988b954d75dd643f36b992919050565b8160120361148d57507f0f57c5571e9a4eab49e2c8cf050dae948aef6ead647392273546249d1c1ff10f919050565b816013036114bc57507f1830ee67b5fb554ad5f63d4388800e1cfe78e310697d46e43c9ce36134f72cca919050565b816014036114eb57507f2134e76ac5d21aab186c2be1dd8f84ee880a1e46eaf712f9d371b6df22191f3e919050565b8160150361151a57507f19df90ec844ebc4ffeebd866f33859b0c051d8c958ee3aa88f8f8df3db91a5b1919050565b8160160361154957507f18cca2a66b5c0787981e69aefd84852d74af0e93ef4912b4648c05f722efe52b919050565b8160170361157857507f2388909415230d1b4d1304d2d54f473a628338f2efad83fadf05644549d2538d919050565b816018036115a757507f27171fb4a97b6cc0e9e8f543b5294de866a2af2c9c8d0b1d96e673e4529ed540919050565b816019036115d657507f2ff6650540f629fd5711a0bc74fc0d28dcb230b9392583e5f8d59696dde6ae21919050565b81601a0361160557507f120c58f143d491e95902f7f5277778a2e0ad5168f6add75669932630ce611518919050565b81601b0361163457507f1f21feb70d3f21b07bf853d5e5db03071ec495a0a565a21da2d665d279483795919050565b81601c0361166357507f24be905fa71335e14c638cc0f66a8623a826e768068a9e968bb1a1dde18a72d2919050565b81601d0361169257507f0f8666b62ed17491c50ceadead57d4cd597ef3821d65c328744c74e553dac26d919050565b81601e036116c157507f0918d46bf52d98b034413f4a1a1c41594e7a7a3f6ae08cb43d1a2a230e1959ef919050565b81601f036116f057507f1bbeb01b4c479ecde76917645e404dfa2e26f90d0afc5a65128513ad375c5ff2919050565b8160200361171f57507f2f68a1c58e257e42a17a6c61dff5551ed560b9922ab119d5ac8e184c9734ead9919050565b8160210361174e57507f1102d2f8db05e4af4842e8ad3d85ed45eb28447eb7212235a2281d5ab5d81d11919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015260640161067a565b60608167ffffffffffffffff8111156117a7576117a76124be565b6040519080825280602002602001820160405280156117d0578160200160208202803683370190505b5090505f5b8281101561183f5761180d8484838181106117f2576117f26124d2565b905060200201355f9081526005602052604090205460ff1690565b15611837576001828281518110611826576118266124d2565b911515602092830291909101909101525b6001016117d5565b5092915050565b600a546118539047612317565b8211156118c85760405162461bcd60e51b815260206004820152603e60248201527f6e6f7420656e6f7567682065746820696e20636f6e74726163742028636f6e7360448201527f69646572696e672065746850656e64696e675769746864726177616c73290000606482015260840161067a565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146119105760405162461bcd60e51b815260040161067a90612363565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015611996573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119ba91906123ab565b6001600160a01b0316146119e05760405162461bcd60e51b815260040161067a906123c6565b6040805160048082526024820183526020820180516001600160e01b03166339da4b5560e01b1790529151635f7b157760e01b81527f0000000000000000000000000000000000000000000000000000000000000000926001600160a01b03841692635f7b1577928792611a7c927f00000000000000000000000000000000000000000000000000000000000000009285928a9133910161247d565b5f604051808303818588803b158015611a93575f80fd5b505af1158015611aa5573d5f803e3d5ffd5b5050505050505050565b600260045403611ad257604051633ee5aeb560e01b815260040160405180910390fd5b6002600455565b60408051600580825260c082019092526060915f91906020820160a080368337019050509050865f1b815f81518110611b1457611b146124d2565b602002602001018181525050855f1b81600181518110611b3657611b366124d2565b602090810291909101015280516001600160a01b0386169082906002908110611b6157611b616124d2565b602002602001018181525050835f1b81600381518110611b8357611b836124d2565b602002602001018181525050825f1b81600481518110611ba557611ba56124d2565b60209081029190910101529695505050505050565b3415611c265760405162461bcd60e51b815260206004820152603560248201527f4d6573736167652076616c756520697320737570706f73656420746f206265206044820152747a65726f20666f722045544820696e7374616e636560581b606482015260840161067a565b80600a5447611c359190612317565b10611cb557604080516001600160a01b0385168152602081018490527f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65910160405180910390a16040516001600160a01b0384169082156108fc029083905f818181858888f19350505050158015611caf573d5f803e3d5ffd5b50505050565b604080516001600160a01b0385168152602081018490527f39d9cf4ffb93650d8ce789639cb8cf3c8d7b039e1f9795c038af55b4ae643fca910160405180910390a1604080516060810182526001600160a01b038581168252602080830185815260018486018181525f8981526008909452958320945185546001600160a01b0319169416939093178455519183019190915591516002909101805460ff191691151591909117905560098054839290611d70908490612423565b9091555050505050565b6003545f8054909163ffffffff640100000000909104811691611d9f911660026125f5565b63ffffffff168163ffffffff1603611e125760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b606482015260840161067a565b80835f80805b5f5463ffffffff9081169082161015611eae57611e36600286612625565b63ffffffff165f03611e7257839250611e548163ffffffff16611130565b63ffffffff82165f9081526001602052604090208590559150611e8d565b63ffffffff81165f9081526001602052604090205492508391505b611e978383610d29565b9350611ea4600286612647565b9450600101611e18565b506003545f90601e90611ec89063ffffffff166001612669565b611ed29190612625565b6003805463ffffffff191663ffffffff83169081179091555f9081526002602052604090208590559050611f07866001612669565b6003805463ffffffff929092166401000000000267ffffffff000000001990921691909117905550939695505050505050565b5f815f03611f4957505f919050565b60035463ffffffff16805b63ffffffff81165f908152600260205260409020548403611f79575060019392505050565b8063ffffffff165f03611f8a5750601e5b80611f9481612345565b9150508163ffffffff168163ffffffff1603611f5457505f9392505050565b6001600160a01b0381168114611035575f80fd5b5f805f805f805f60c0888a031215611fdd575f80fd5b8735965060208801359550604088013594506060880135611ffd81611fb3565b93506080880135925060a088013567ffffffffffffffff80821115612020575f80fd5b818a0191508a601f830112612033575f80fd5b813581811115612041575f80fd5b8b6020828501011115612052575f80fd5b60208301945080935050505092959891949750929550565b5f806040838503121561207b575f80fd5b823561208681611fb3565b946020939093013593505050565b5f5b838110156120ae578181015183820152602001612096565b50505f910152565b5f81518084526120cd816020860160208601612094565b601f01601f19169290920160200192915050565b602081525f610db160208301846120b6565b5f60208284031215612103575f80fd5b5035919050565b5f806040838503121561211b575f80fd5b50508035926020909101359150565b63ffffffff81168114611035575f80fd5b5f6020828403121561214b575f80fd5b8135610db18161212a565b5f8060208385031215612167575f80fd5b823567ffffffffffffffff8082111561217e575f80fd5b818501915085601f830112612191575f80fd5b81358181111561219f575f80fd5b8660208260051b85010111156121b3575f80fd5b60209290920196919550909350505050565b602080825282518282018190525f9190848201906040850190845b818110156121fe5783511515835292840192918401916001016121e0565b50909695505050505050565b6040810181835f5b6002811015612231578151835260209283019290910190600101612212565b50505092915050565b5f6020828403121561224a575f80fd5b5051919050565b60408152826040820152828460608301375f606084830101525f601f19601f850116820160608101602060608584030160208601528186518084526080850191506020880194505f93505b808410156122bc578451825293820193600193909301929082019061229c565b5098975050505050505050565b5f602082840312156122d9575f80fd5b81518015158114610db1575f80fd5b5f82516122f9818460208701612094565b9190910192915050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561098b5761098b612303565b5f6020828403121561233a575f80fd5b8151610db18161212a565b5f63ffffffff82168061235a5761235a612303565b5f190192915050565b60208082526028908201527f66756e6374696f6e206e6f742063616c6c6564206279206c315363726f6c6c4d60408201526732b9b9b2b733b2b960c11b606082015260800190565b5f602082840312156123bb575f80fd5b8151610db181611fb3565b6020808252603d908201527f636f6e7472616374206d6573736167696e672066726f6d204c32206973206e6f60408201527f7420746865206c32546f61646e61646f5363726f6c6c41646472657373000000606082015260800190565b8082018082111561098b5761098b612303565b5f60018060a01b03808816835286602084015260a0604084015261245d60a08401876120b6565b63ffffffff95909516606084015292909216608090910152509392505050565b5f60018060a01b03808816835286602084015260a060408401526124a460a08401876120b6565b606084019590955292909216608090910152509392505050565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b600181815b80851115612523578163ffffffff0482111561250957612509612303565b8085161561251657918102915b93841c93908002906124eb565b509250929050565b5f826125395750600161098b565b8161254557505f61098b565b816001811461255b576002811461256557612596565b600191505061098b565b60ff84111561257657612576612303565b6001841b915063ffffffff82111561259057612590612303565b5061098b565b5060208310610133831016604e8410600b84101617156125cd575081810a63ffffffff8111156125c8576125c8612303565b61098b565b6125d783836124e6565b8063ffffffff048211156125ed576125ed612303565b029392505050565b5f63ffffffff61260981851682851661252b565b949350505050565b634e487b7160e01b5f52601260045260245ffd5b5f63ffffffff8084168061263b5761263b612611565b92169190910692915050565b5f63ffffffff8084168061265d5761265d612611565b92169190910492915050565b63ffffffff81811683821601908082111561183f5761183f61230356fea2646970667358221220c8310babb3669bd8f7f2b4f967077a1e9de0831ebdb053e347c7a93e64a3731664736f6c63430008170033";

type ToadnadoL2ConstructorParams =
  | [linkLibraryAddresses: ToadnadoL2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ToadnadoL2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ToadnadoL2__factory extends ContractFactory {
  constructor(...args: ToadnadoL2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ToadnadoL2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ToadnadoL2LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$75f79a42d9bcbdbb69ad79ebd80f556f39\\$__", "g"),
      linkLibraryAddresses["poseidon-solidity/PoseidonT3.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    _merkleTreeHeight: BigNumberish,
    _l2ScrollMessenger: AddressLike,
    _l1ToadnadoAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _verifier,
      _merkleTreeHeight,
      _l2ScrollMessenger,
      _l1ToadnadoAddress,
      overrides || {}
    );
  }
  override deploy(
    _verifier: AddressLike,
    _merkleTreeHeight: BigNumberish,
    _l2ScrollMessenger: AddressLike,
    _l1ToadnadoAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _verifier,
      _merkleTreeHeight,
      _l2ScrollMessenger,
      _l1ToadnadoAddress,
      overrides || {}
    ) as Promise<
      ToadnadoL2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ToadnadoL2__factory {
    return super.connect(runner) as ToadnadoL2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ToadnadoL2Interface {
    return new Interface(_abi) as ToadnadoL2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): ToadnadoL2 {
    return new Contract(address, _abi, runner) as unknown as ToadnadoL2;
  }
}

export interface ToadnadoL2LibraryAddresses {
  ["poseidon-solidity/PoseidonT3.sol:PoseidonT3"]: string;
}
