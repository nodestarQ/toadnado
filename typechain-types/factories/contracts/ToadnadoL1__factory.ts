/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ToadnadoL1,
  ToadnadoL1Interface,
} from "../../contracts/ToadnadoL1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_l1ScrollMessenger",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "VerificationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifier",
        type: "uint256",
      },
    ],
    name: "PendingWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifier",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "L2_ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_root",
        type: "uint256",
      },
    ],
    name: "addL2Root",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "bridgeEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "commitmentsTreeRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentL2RootsCacheIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_preCommitment",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "ethPendingWithdrawals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastKnowL1Root",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastKnowL2Root",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_right",
        type: "uint256",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_root",
        type: "uint256",
      },
    ],
    name: "isKnownL1Root",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_root",
        type: "uint256",
      },
    ],
    name: "isKnownL2Root",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifierHash",
        type: "uint256",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_nullifierHashes",
        type: "uint256[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1ScrollMessenger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "l2RootsCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ScrollToadnadoAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recieveBridgedEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "requestEthBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l2ScrollToadnadoAddress",
        type: "address",
      },
    ],
    name: "setL2ScrollToadnadoAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_l1root",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_l2root",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nullifier",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "snarkProof",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifier",
        type: "uint256",
      },
    ],
    name: "withdrawPending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "$75f79a42d9bcbdbb69ad79ebd80f556f39$__9163561558fe9161084991600401612305565b602060405180830381865af4158015610864573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108889190612335565b9050465f610899838989858a611b8a565b604051633a94343960e21b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ea50d0e4906108ec9088908890869060040161234c565b602060405180830381865afa158015610907573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061092b91906123c4565b6109485760405163439cc0cd60e01b815260040160405180910390fd5b5f888152600560205260409020805460ff1916600117905561096b878988611c6b565b5050506109786001600455565b50505050505050565b5f81815260086020908152604091829020825160608101845281546001600160a01b031681526001808301549382019390935260029091015460ff1615159281018390529114610a135760405162461bcd60e51b815260206004820181905260248201527f5468697320776974686472617720697320616c726561647920636c61696d6564604482015260640161074d565b5f8281526008602090815260408220600201805460ff19169055820151600a805491929091610a439084906123f7565b9091555050805160208201516040516001600160a01b039092169181156108fc0291905f818181858888f19350505050158015610a82573d5f803e3d5ffd5b508051604080516001600160a01b039092168252602082018490527f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65910160405180910390a15050565b5f610ad682611e2b565b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b245760405162461bcd60e51b815260040161074d9061240a565b600c5460408051636e296e4560e01b815290516001600160a01b03928316927f00000000000000000000000000000000000000000000000000000000000000001691636e296e459160048083019260209291908290030181865afa158015610b8e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bb29190612452565b6001600160a01b031614610bd85760405162461bcd60e51b815260040161074d9061246d565b34600a5f828254610be991906124ca565b9091555050565b604080518082018252838152602081018390529051632b0aac7f60e11b81525f9173__$75f79a42d9bcbdbb69ad79ebd80f556f39$__9163561558fe91610c3991600401612305565b602060405180830381865af4158015610c54573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c789190612335565b9392505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cc75760405162461bcd60e51b815260040161074d9061240a565b600c5460408051636e296e4560e01b815290516001600160a01b03928316927f00000000000000000000000000000000000000000000000000000000000000001691636e296e459160048083019260209291908290030181865afa158015610d31573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d559190612452565b6001600160a01b031614610d7b5760405162461bcd60e51b815260040161074d9061246d565b600e545f90601e90610d949063ffffffff1660016124dd565b610d9e919061250e565b600e805463ffffffff90921663ffffffff19909216821790555f9081526002602052604090209190915550565b610dd3611ea4565b610ddc5f611ed1565b565b610de6611ea4565b600c546001600160a01b031615610e4e5760405162461bcd60e51b815260206004820152602660248201527f6c325363726f6c6c546f61646e61646f4164647265737320697320616c726561604482015265191e481cd95d60d21b606482015260840161074d565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b610e78611b60565b60408051808201825282815234602082018190529151632b0aac7f60e11b81525f9173__$75f79a42d9bcbdbb69ad79ebd80f556f39$__9163561558fe91610ec291600401612305565b602060405180830381865af4158015610edd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f019190612335565b5f8181526006602052604090205490915060ff1615610f745760405162461bcd60e51b815260206004820152602960248201527f54686520636f6d6d69746d656e742068617320616c7265616479206265656e206044820152681cdd589b5a5d1d195960ba1b606482015260840161074d565b5f610f7e82611f22565b5f8381526006602052604090819020805460ff191660011790555190915082907f2813ca2762c14ad53880ef467c7448a9015904c20e064e6216ffb3f63390ec5d90610fde908490429063ffffffff929092168252602082015260400190565b60405180910390a2505050610ff36001600455565b50565b5f815f0361100557505f919050565b600e5463ffffffff16805b63ffffffff81165f908152600d60205260409020548403611035575060019392505050565b8063ffffffff165f036110465750601e5b8061105081612530565b9150508163ffffffff168163ffffffff160361101057505f9392505050565b600954600c546040805160248101849052604480820186905282518083039091018152606490910182526020810180516001600160e01b031663f8af86e760e01b1790529051635f7b157760e01b81527f0000000000000000000000000000000000000000000000000000000000000000926001600160a01b0380851693635f7b1577935f9361110993169184918a903390600401612591565b5f604051808303818588803b158015611120575f80fd5b505af1158015611132573d5f803e3d5ffd5b50505f600955505050505050565b5f815f0361114f57505f919050565b8160010361117e57507f2098f5fb9e239eab3ceac3f27b81e481dc3124d55ffed523a839ee8446b64864919050565b816002036111ad57507f1069673dcdb12263df301a6ff584a7ec261a44cb9dc68df067a4774460b1f1e1919050565b816003036111dc57507f18f43331537ee2af2e3d758d50f72106467c6eea50371dd528d57eb2b856d238919050565b8160040361120b57507f07f9d837cb17b0d36320ffe93ba52345f1b728571a568265caac97559dbc952a919050565b8160050361123a57507f2b94cf5e8746b3f5c9631f4c5df32907a699c58c94b2ad4d7b5cec1639183f55919050565b8160060361126957507f2dee93c5a666459646ea7d22cca9e1bcfed71e6951b953611d11dda32ea09d78919050565b8160070361129857507f078295e5a22b84e982cf601eb639597b8b0515a88cb5ac7fa8a4aabe3c87349d919050565b816008036112c757507f2fa5e5f18f6027a6501bec864564472a616b2e274a41211a444cbe3a99f3cc61919050565b816009036112f657507f0e884376d0d8fd21ecb780389e941f66e45e7acce3e228ab3e2156a614fcd747919050565b81600a0361132557507f1b7201da72494f1e28717ad1a52eb469f95892f957713533de6175e5da190af2919050565b81600b0361135457507f1f8d8822725e36385200c0b201249819a6e6e1e4650808b5bebc6bface7d7636919050565b81600c0361138357507f2c5d82f66c914bafb9701589ba8cfcfb6162b0a12acf88a8d0879a0471b5f85a919050565b81600d036113b257507f14c54148a0940bb820957f5adf3fa1134ef5c4aaa113f4646458f270e0bfbfd0919050565b81600e036113e157507f190d33b12f986f961e10c0ee44d8b9af11be25588cad89d416118e4bf4ebe80c919050565b81600f0361141057507f22f98aa9ce704152ac17354914ad73ed1167ae6596af510aa5b3649325e06c92919050565b8160100361143f57507f2a7c7c9b6ce5880b9f6f228d72bf6a575a526f29c66ecceef8b753d38bba7323919050565b8160110361146e57507f2e8186e558698ec1c67af9c14d463ffc470043c9c2988b954d75dd643f36b992919050565b8160120361149d57507f0f57c5571e9a4eab49e2c8cf050dae948aef6ead647392273546249d1c1ff10f919050565b816013036114cc57507f1830ee67b5fb554ad5f63d4388800e1cfe78e310697d46e43c9ce36134f72cca919050565b816014036114fb57507f2134e76ac5d21aab186c2be1dd8f84ee880a1e46eaf712f9d371b6df22191f3e919050565b8160150361152a57507f19df90ec844ebc4ffeebd866f33859b0c051d8c958ee3aa88f8f8df3db91a5b1919050565b8160160361155957507f18cca2a66b5c0787981e69aefd84852d74af0e93ef4912b4648c05f722efe52b919050565b8160170361158857507f2388909415230d1b4d1304d2d54f473a628338f2efad83fadf05644549d2538d919050565b816018036115b757507f27171fb4a97b6cc0e9e8f543b5294de866a2af2c9c8d0b1d96e673e4529ed540919050565b816019036115e657507f2ff6650540f629fd5711a0bc74fc0d28dcb230b9392583e5f8d59696dde6ae21919050565b81601a0361161557507f120c58f143d491e95902f7f5277778a2e0ad5168f6add75669932630ce611518919050565b81601b0361164457507f1f21feb70d3f21b07bf853d5e5db03071ec495a0a565a21da2d665d279483795919050565b81601c0361167357507f24be905fa71335e14c638cc0f66a8623a826e768068a9e968bb1a1dde18a72d2919050565b81601d036116a257507f0f8666b62ed17491c50ceadead57d4cd597ef3821d65c328744c74e553dac26d919050565b81601e036116d157507f0918d46bf52d98b034413f4a1a1c41594e7a7a3f6ae08cb43d1a2a230e1959ef919050565b81601f0361170057507f1bbeb01b4c479ecde76917645e404dfa2e26f90d0afc5a65128513ad375c5ff2919050565b8160200361172f57507f2f68a1c58e257e42a17a6c61dff5551ed560b9922ab119d5ac8e184c9734ead9919050565b8160210361175e57507f1102d2f8db05e4af4842e8ad3d85ed45eb28447eb7212235a2281d5ab5d81d11919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015260640161074d565b60608167ffffffffffffffff8111156117b7576117b76125d2565b6040519080825280602002602001820160405280156117e0578160200160208202803683370190505b5090505f5b8281101561184f5761181d848483818110611802576118026125e6565b905060200201355f9081526005602052604090205460ff1690565b15611847576001828281518110611836576118366125e6565b911515602092830291909101909101525b6001016117e5565b5092915050565b61185e611ea4565b6001600160a01b03811661188757604051631e4fbdf760e01b81525f600482015260240161074d565b610ff381611ed1565b600a5461189d90476123f7565b8211156119125760405162461bcd60e51b815260206004820152603e60248201527f6e6f7420656e6f7567682065746820696e20636f6e74726163742028636f6e7360448201527f69646572696e672065746850656e64696e675769746864726177616c73290000606482015260840161074d565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461195a5760405162461bcd60e51b815260040161074d9061240a565b600c5461196f906001600160a01b03166120e2565b6119f77f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119ce573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119f29190612452565b6120e2565b600c5460408051636e296e4560e01b815290516001600160a01b03928316927f00000000000000000000000000000000000000000000000000000000000000001691636e296e459160048083019260209291908290030181865afa158015611a61573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a859190612452565b6001600160a01b031614611aab5760405162461bcd60e51b815260040161074d9061246d565b600c546040805160048082526024820183526020820180516001600160e01b03166339da4b5560e01b1790529151635f7b157760e01b81527f0000000000000000000000000000000000000000000000000000000000000000936001600160a01b0380861694635f7b1577948994611b2d949093169285928a91339101612591565b5f604051808303818588803b158015611b44575f80fd5b505af1158015611b56573d5f803e3d5ffd5b5050505050505050565b600260045403611b8357604051633ee5aeb560e01b815260040160405180910390fd5b6002600455565b60408051600580825260c082019092526060915f91906020820160a080368337019050509050865f1b815f81518110611bc557611bc56125e6565b602002602001018181525050855f1b81600181518110611be757611be76125e6565b602090810291909101015280516001600160a01b0386169082906002908110611c1257611c126125e6565b602002602001018181525050835f1b81600381518110611c3457611c346125e6565b602002602001018181525050825f1b81600481518110611c5657611c566125e6565b60209081029190910101529695505050505050565b3415611cd75760405162461bcd60e51b815260206004820152603560248201527f4d6573736167652076616c756520697320737570706f73656420746f206265206044820152747a65726f20666f722045544820696e7374616e636560581b606482015260840161074d565b80600a5447611ce691906123f7565b10611d6657604080516001600160a01b0385168152602081018490527f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65910160405180910390a16040516001600160a01b0384169082156108fc029083905f818181858888f19350505050158015611d60573d5f803e3d5ffd5b50505050565b604080516001600160a01b0385168152602081018490527f39d9cf4ffb93650d8ce789639cb8cf3c8d7b039e1f9795c038af55b4ae643fca910160405180910390a1604080516060810182526001600160a01b038581168252602080830185815260018486018181525f8981526008909452958320945185546001600160a01b0319169416939093178455519183019190915591516002909101805460ff191691151591909117905560098054839290611e219084906124ca565b9091555050505050565b5f815f03611e3a57505f919050565b60035463ffffffff16805b63ffffffff81165f908152600260205260409020548403611e6a575060019392505050565b8063ffffffff165f03611e7b5750601e5b80611e8581612530565b9150508163ffffffff168163ffffffff1603611e4557505f9392505050565b600b546001600160a01b03163314610ddc5760405163118cdaa760e01b815233600482015260240161074d565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6003545f8054909163ffffffff640100000000909104811691611f4791166002612709565b63ffffffff168163ffffffff1603611fba5760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b606482015260840161074d565b80835f80805b5f5463ffffffff908116908216101561205657611fde60028661250e565b63ffffffff165f0361201a57839250611ffc8163ffffffff16611140565b63ffffffff82165f9081526001602052604090208590559150612035565b63ffffffff81165f9081526001602052604090205492508391505b61203f8383610bf0565b935061204c600286612725565b9450600101611fc0565b506003545f90601e906120709063ffffffff1660016124dd565b61207a919061250e565b6003805463ffffffff191663ffffffff83169081179091555f90815260026020526040902085905590506120af8660016124dd565b6003805463ffffffff929092166401000000000267ffffffff000000001990921691909117905550939695505050505050565b6040516001600160a01b0382166024820152610ff39060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b179052610ff3815f6a636f6e736f6c652e6c6f6790505f80835160208501845afa505050565b6001600160a01b0381168114610ff3575f80fd5b5f805f805f805f60c0888a031215612172575f80fd5b873596506020880135955060408801359450606088013561219281612148565b93506080880135925060a088013567ffffffffffffffff808211156121b5575f80fd5b818a0191508a601f8301126121c8575f80fd5b8135818111156121d6575f80fd5b8b60208285010111156121e7575f80fd5b60208301945080935050505092959891949750929550565b5f6020828403121561220f575f80fd5b5035919050565b5f8060408385031215612227575f80fd5b50508035926020909101359150565b5f60208284031215612246575f80fd5b8135610c7881612148565b5f8060208385031215612262575f80fd5b823567ffffffffffffffff80821115612279575f80fd5b818501915085601f83011261228c575f80fd5b81358181111561229a575f80fd5b8660208260051b85010111156122ae575f80fd5b60209290920196919550909350505050565b602080825282518282018190525f9190848201906040850190845b818110156122f95783511515835292840192918401916001016122db565b50909695505050505050565b6040810181835f5b600281101561232c57815183526020928301929091019060010161230d565b50505092915050565b5f60208284031215612345575f80fd5b5051919050565b60408152826040820152828460608301375f606084830101525f601f19601f850116820160608101602060608584030160208601528186518084526080850191506020880194505f93505b808410156123b75784518252938201936001939093019290820190612397565b5098975050505050505050565b5f602082840312156123d4575f80fd5b81518015158114610c78575f80fd5b634e487b7160e01b5f52601160045260245ffd5b81810381811115610ad657610ad66123e3565b60208082526028908201527f66756e6374696f6e206e6f742063616c6c6564206279206c315363726f6c6c4d60408201526732b9b9b2b733b2b960c11b606082015260800190565b5f60208284031215612462575f80fd5b8151610c7881612148565b6020808252603d908201527f636f6e7472616374206d6573736167696e672066726f6d204c32206973206e6f60408201527f7420746865206c32546f61646e61646f5363726f6c6c41646472657373000000606082015260800190565b80820180821115610ad657610ad66123e3565b63ffffffff81811683821601908082111561184f5761184f6123e3565b634e487b7160e01b5f52601260045260245ffd5b5f63ffffffff80841680612524576125246124fa565b92169190910692915050565b5f63ffffffff821680612545576125456123e3565b5f190192915050565b5f81518084525f5b8181101561257257602081850181015186830182015201612556565b505f602082860101526020601f19601f83011685010191505092915050565b5f60018060a01b03808816835286602084015260a060408401526125b860a084018761254e565b606084019590955292909216608090910152509392505050565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b600181815b80851115612637578163ffffffff0482111561261d5761261d6123e3565b8085161561262a57918102915b93841c93908002906125ff565b509250929050565b5f8261264d57506001610ad6565b8161265957505f610ad6565b816001811461266f5760028114612679576126aa565b6001915050610ad6565b60ff84111561268a5761268a6123e3565b6001841b915063ffffffff8211156126a4576126a46123e3565b50610ad6565b5060208310610133831016604e8410600b84101617156126e1575081810a63ffffffff8111156126dc576126dc6123e3565b610ad6565b6126eb83836125fa565b8063ffffffff04821115612701576127016123e3565b029392505050565b5f63ffffffff61271d81851682851661263f565b949350505050565b5f63ffffffff8084168061273b5761273b6124fa565b9216919091049291505056fea264697066735822122075033679ab38cd399871669b5ecc602de7a8df056bffadc6f6f53db46ddae3be64736f6c63430008170033";

type ToadnadoL1ConstructorParams =
  | [linkLibraryAddresses: ToadnadoL1LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ToadnadoL1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ToadnadoL1__factory extends ContractFactory {
  constructor(...args: ToadnadoL1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ToadnadoL1__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ToadnadoL1LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$75f79a42d9bcbdbb69ad79ebd80f556f39\\$__", "g"),
      linkLibraryAddresses["poseidon-solidity/PoseidonT3.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    _merkleTreeHeight: BigNumberish,
    _l1ScrollMessenger: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _verifier,
      _merkleTreeHeight,
      _l1ScrollMessenger,
      overrides || {}
    );
  }
  override deploy(
    _verifier: AddressLike,
    _merkleTreeHeight: BigNumberish,
    _l1ScrollMessenger: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _verifier,
      _merkleTreeHeight,
      _l1ScrollMessenger,
      overrides || {}
    ) as Promise<
      ToadnadoL1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ToadnadoL1__factory {
    return super.connect(runner) as ToadnadoL1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ToadnadoL1Interface {
    return new Interface(_abi) as ToadnadoL1Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): ToadnadoL1 {
    return new Contract(address, _abi, runner) as unknown as ToadnadoL1;
  }
}

export interface ToadnadoL1LibraryAddresses {
  ["poseidon-solidity/PoseidonT3.sol:PoseidonT3"]: string;
}
