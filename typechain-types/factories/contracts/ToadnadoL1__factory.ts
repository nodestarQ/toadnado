/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ToadnadoL1,
  ToadnadoL1Interface,
} from "../../contracts/ToadnadoL1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_denomination",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_l1ScrollMessenger",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "VerificationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifier",
        type: "uint256",
      },
    ],
    name: "PendingWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifier",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_root",
        type: "uint256",
      },
    ],
    name: "addL2Root",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "bridgeEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "commitmentsTreeRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "denomination",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_commitment",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "ethPendingWithdrawals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_right",
        type: "uint256",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_root",
        type: "uint256",
      },
    ],
    name: "isKnownL1Root",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_root",
        type: "uint256",
      },
    ],
    name: "isKnownL2Root",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifierHash",
        type: "uint256",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_nullifierHashes",
        type: "uint256[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1ScrollMessenger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ScrollToadnadoAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recieveBridgedEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "requestEthBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l2ScrollToadnadoAddress",
        type: "address",
      },
    ],
    name: "setL2ScrollToadnadoAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_l1root",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_l2root",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nullifier",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "snarkProof",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifier",
        type: "uint256",
      },
    ],
    name: "withdrawPending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0604052600380546001600160401b03191690555f6009819055600a5534801562000029575f80fd5b50604051620030a3380380620030a38339810160408190526200004c9162000959565b33848484805f8163ffffffff1611620000b85760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60148163ffffffff1610620001105760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20323000006044820152606401620000af565b5f805463ffffffff191663ffffffff83161781555b8163ffffffff168163ffffffff1610156200016d576200014b63ffffffff821662000263565b63ffffffff82165f908152600160208190526040909120919091550162000125565b506200017f63ffffffff821662000263565b5f805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b55506001600455816200020c5760405162461bcd60e51b815260206004820152602560248201527f64656e6f6d696e6174696f6e2073686f756c6420626520677265617465722074604482015264068616e20360dc1b6064820152608401620000af565b506001600160a01b0391821660a05260805281166200024157604051631e4fbdf760e01b81525f6004820152602401620000af565b6200024c81620008f1565b506001600160a01b031660c05250620009b3915050565b5f815f036200027357505f919050565b81600103620002a357507f2098f5fb9e239eab3ceac3f27b81e481dc3124d55ffed523a839ee8446b64864919050565b81600203620002d357507f1069673dcdb12263df301a6ff584a7ec261a44cb9dc68df067a4774460b1f1e1919050565b816003036200030357507f18f43331537ee2af2e3d758d50f72106467c6eea50371dd528d57eb2b856d238919050565b816004036200033357507f07f9d837cb17b0d36320ffe93ba52345f1b728571a568265caac97559dbc952a919050565b816005036200036357507f2b94cf5e8746b3f5c9631f4c5df32907a699c58c94b2ad4d7b5cec1639183f55919050565b816006036200039357507f2dee93c5a666459646ea7d22cca9e1bcfed71e6951b953611d11dda32ea09d78919050565b81600703620003c357507f078295e5a22b84e982cf601eb639597b8b0515a88cb5ac7fa8a4aabe3c87349d919050565b81600803620003f357507f2fa5e5f18f6027a6501bec864564472a616b2e274a41211a444cbe3a99f3cc61919050565b816009036200042357507f0e884376d0d8fd21ecb780389e941f66e45e7acce3e228ab3e2156a614fcd747919050565b81600a036200045357507f1b7201da72494f1e28717ad1a52eb469f95892f957713533de6175e5da190af2919050565b81600b036200048357507f1f8d8822725e36385200c0b201249819a6e6e1e4650808b5bebc6bface7d7636919050565b81600c03620004b357507f2c5d82f66c914bafb9701589ba8cfcfb6162b0a12acf88a8d0879a0471b5f85a919050565b81600d03620004e357507f14c54148a0940bb820957f5adf3fa1134ef5c4aaa113f4646458f270e0bfbfd0919050565b81600e036200051357507f190d33b12f986f961e10c0ee44d8b9af11be25588cad89d416118e4bf4ebe80c919050565b81600f036200054357507f22f98aa9ce704152ac17354914ad73ed1167ae6596af510aa5b3649325e06c92919050565b816010036200057357507f2a7c7c9b6ce5880b9f6f228d72bf6a575a526f29c66ecceef8b753d38bba7323919050565b81601103620005a357507f2e8186e558698ec1c67af9c14d463ffc470043c9c2988b954d75dd643f36b992919050565b81601203620005d357507f0f57c5571e9a4eab49e2c8cf050dae948aef6ead647392273546249d1c1ff10f919050565b816013036200060357507f1830ee67b5fb554ad5f63d4388800e1cfe78e310697d46e43c9ce36134f72cca919050565b816014036200063357507f2134e76ac5d21aab186c2be1dd8f84ee880a1e46eaf712f9d371b6df22191f3e919050565b816015036200066357507f19df90ec844ebc4ffeebd866f33859b0c051d8c958ee3aa88f8f8df3db91a5b1919050565b816016036200069357507f18cca2a66b5c0787981e69aefd84852d74af0e93ef4912b4648c05f722efe52b919050565b81601703620006c357507f2388909415230d1b4d1304d2d54f473a628338f2efad83fadf05644549d2538d919050565b81601803620006f357507f27171fb4a97b6cc0e9e8f543b5294de866a2af2c9c8d0b1d96e673e4529ed540919050565b816019036200072357507f2ff6650540f629fd5711a0bc74fc0d28dcb230b9392583e5f8d59696dde6ae21919050565b81601a036200075357507f120c58f143d491e95902f7f5277778a2e0ad5168f6add75669932630ce611518919050565b81601b036200078357507f1f21feb70d3f21b07bf853d5e5db03071ec495a0a565a21da2d665d279483795919050565b81601c03620007b357507f24be905fa71335e14c638cc0f66a8623a826e768068a9e968bb1a1dde18a72d2919050565b81601d03620007e357507f0f8666b62ed17491c50ceadead57d4cd597ef3821d65c328744c74e553dac26d919050565b81601e036200081357507f0918d46bf52d98b034413f4a1a1c41594e7a7a3f6ae08cb43d1a2a230e1959ef919050565b81601f036200084357507f1bbeb01b4c479ecde76917645e404dfa2e26f90d0afc5a65128513ad375c5ff2919050565b816020036200087357507f2f68a1c58e257e42a17a6c61dff5551ed560b9922ab119d5ac8e184c9734ead9919050565b81602103620008a357507f1102d2f8db05e4af4842e8ad3d85ed45eb28447eb7212235a2281d5ab5d81d11919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000af565b919050565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b80516001600160a01b0381168114620008ec575f80fd5b5f805f80608085870312156200096d575f80fd5b620009788562000942565b935060208501519250604085015163ffffffff8116811462000998575f80fd5b9150620009a86060860162000942565b905092959194509250565b60805160a05160c05161267162000a325f395f8181610470015281816107fe0152818161085c015281816109a1015281816109ff01528181610f2b01528181611787015281816117de01528181611882015261194f01525f81816102980152610c8901525f818161040401528181611c1a0152611f4d01526126715ff3fe6080604052600436106101e6575f3560e01c806390eeb02b11610108578063cd87a3b41161009d578063ea65ba491161006d578063ea65ba49146105da578063f178e47c14610606578063f2fde38b14610631578063f8af86e714610650578063fc7e9c6f1461066f575f80fd5b8063cd87a3b414610564578063d21e82ab14610578578063db394bb9146105a6578063e8295588146105bb575f80fd5b8063b89d302d116100d8578063b89d302d146104c4578063ba70f757146104f2578063c2b40ae41461051a578063c9ca7a6114610545575f80fd5b806390eeb02b14610443578063a98f70441461045f578063adbdeaf314610492578063b6b55f25146104b1575f80fd5b80634ecf518b1161017e578063715018a61161014e578063715018a6146103cc5780637bde37db146103e05780638bca6d16146103f35780638da5cb5b14610426575f80fd5b80634ecf518b146103305780635a129efe146103605780635bb939951461038e5780636b91e4d5146103ad575f80fd5b80632e585fd8116101b95780632e585fd8146102ba578063397a14b4146102db57806339da4b55146102fa57806349ce899714610302575f80fd5b80630b2f37fa146101ea5780631b5844ff1461022657806328482f89146102495780632b7ac3f314610287575b5f80fd5b3480156101f5575f80fd5b50600c54610209906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b348015610231575f80fd5b5061023b600a5481565b60405190815260200161021d565b348015610254575f80fd5b50610277610263366004612046565b60076020525f908152604090205460ff1681565b604051901515815260200161021d565b348015610292575f80fd5b506102097f000000000000000000000000000000000000000000000000000000000000000081565b3480156102c5575f80fd5b506102d96102d4366004612046565b610693565b005b3480156102e6575f80fd5b506102776102f5366004612046565b6107e3565b6102d96107f3565b34801561030d575f80fd5b5061027761031c366004612046565b60066020525f908152604090205460ff1681565b34801561033b575f80fd5b505f5461034b9063ffffffff1681565b60405163ffffffff909116815260200161021d565b34801561036b575f80fd5b5061027761037a366004612046565b5f9081526005602052604090205460ff1690565b348015610399575f80fd5b5061023b6103a836600461205d565b610907565b3480156103b8575f80fd5b506102d96103c7366004612046565b610996565b3480156103d7575f80fd5b506102d9610aac565b6102d96103ee366004612091565b610abf565b3480156103fe575f80fd5b5061023b7f000000000000000000000000000000000000000000000000000000000000000081565b348015610431575f80fd5b50600b546001600160a01b0316610209565b34801561044e575f80fd5b5060035461034b9063ffffffff1681565b34801561046a575f80fd5b506102097f000000000000000000000000000000000000000000000000000000000000000081565b34801561049d575f80fd5b506102d96104ac36600461212a565b610d55565b6102d96104bf366004612046565b610de7565b3480156104cf575f80fd5b506102776104de366004612046565b5f908152600d602052604090205460ff1690565b3480156104fd575f80fd5b5060035463ffffffff165f9081526002602052604090205461023b565b348015610525575f80fd5b5061023b610534366004612046565b60026020525f908152604090205481565b348015610550575f80fd5b506102d961055f366004612046565b610ed9565b34801561056f575f80fd5b5061034b601e81565b348015610583575f80fd5b50610277610592366004612046565b60056020525f908152604090205460ff1681565b3480156105b1575f80fd5b5061023b60095481565b3480156105c6575f80fd5b5061023b6105d5366004612046565b610faa565b3480156105e5575f80fd5b506105f96105f4366004612145565b611606565b60405161021d91906121b4565b348015610611575f80fd5b5061023b610620366004612046565b60016020525f908152604090205481565b34801561063c575f80fd5b506102d961064b36600461212a565b6116c0565b34801561065b575f80fd5b506102d961066a36600461205d565b6116fa565b34801561067a575f80fd5b5060035461034b90640100000000900463ffffffff1681565b5f81815260086020908152604091829020825160608101845281546001600160a01b031681526001808301549382019390935260029091015460ff161515928101839052911461072a5760405162461bcd60e51b815260206004820181905260248201527f5468697320776974686472617720697320616c726561647920636c61696d656460448201526064015b60405180910390fd5b5f8281526008602090815260408220600201805460ff19169055820151600a80549192909161075a90849061220d565b9091555050805160208201516040516001600160a01b039092169181156108fc0291905f818181858888f19350505050158015610799573d5f803e3d5ffd5b508051604080516001600160a01b039092168252602082018490527f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65910160405180910390a15050565b5f6107ed826119ca565b92915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461083b5760405162461bcd60e51b815260040161072190612220565b600c5460408051636e296e4560e01b815290516001600160a01b03928316927f00000000000000000000000000000000000000000000000000000000000000001691636e296e459160048083019260209291908290030181865afa1580156108a5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108c99190612268565b6001600160a01b0316146108ef5760405162461bcd60e51b815260040161072190612283565b34600a5f82825461090091906122e0565b9091555050565b604080518082018252838152602081018390529051632b0aac7f60e11b81525f9173__$75f79a42d9bcbdbb69ad79ebd80f556f39$__9163561558fe91610950916004016122f3565b602060405180830381865af415801561096b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061098f9190612323565b9392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109de5760405162461bcd60e51b815260040161072190612220565b600c5460408051636e296e4560e01b815290516001600160a01b03928316927f00000000000000000000000000000000000000000000000000000000000000001691636e296e459160048083019260209291908290030181865afa158015610a48573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a6c9190612268565b6001600160a01b031614610a925760405162461bcd60e51b815260040161072190612283565b5f908152600d60205260409020805460ff19166001179055565b610ab4611a43565b610abd5f611a70565b565b610ac7611ac1565b5f8481526005602052604090205460ff1615610b255760405162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606401610721565b5f858152600d602052604090205460ff16610b825760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f742066696e6420796f7572206c32206d65726b6c6520726f6f74006044820152606401610721565b610b8b866107e3565b610bd75760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f742066696e6420796f7572206c31206d65726b6c6520726f6f74006044820152606401610721565b604080518082018252878152602081018790529051632b0aac7f60e11b81525f9173__$75f79a42d9bcbdbb69ad79ebd80f556f39$__9163561558fe91610c20916004016122f3565b602060405180830381865af4158015610c3b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c5f9190612323565b9050465f610c6f83888885611aeb565b604051633a94343960e21b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ea50d0e490610cc29088908890869060040161233a565b602060405180830381865afa158015610cdd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0191906123b2565b610d1e5760405163439cc0cd60e01b815260040160405180910390fd5b5f878152600560205260409020805460ff19166001179055610d408688611ba9565b505050610d4d6001600455565b505050505050565b610d5d611a43565b600c546001600160a01b031615610dc55760405162461bcd60e51b815260206004820152602660248201527f6c325363726f6c6c546f61646e61646f4164647265737320697320616c726561604482015265191e481cd95d60d21b6064820152608401610721565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b610def611ac1565b5f8181526006602052604090205460ff1615610e5f5760405162461bcd60e51b815260206004820152602960248201527f54686520636f6d6d69746d656e742068617320616c7265616479206265656e206044820152681cdd589b5a5d1d195960ba1b6064820152608401610721565b5f610e6982611d8b565b5f838152600660205260409020805460ff191660011790559050610e8b611f4b565b6040805163ffffffff8316815242602082015283917f2813ca2762c14ad53880ef467c7448a9015904c20e064e6216ffb3f63390ec5d910160405180910390a250610ed66001600455565b50565b600954600c546040805160248101849052604480820186905282518083039091018152606490910182526020810180516001600160e01b031663f8af86e760e01b1790529051635f7b157760e01b81527f0000000000000000000000000000000000000000000000000000000000000000926001600160a01b0380851693635f7b1577935f93610f7393169184918a903390600401612414565b5f604051808303818588803b158015610f8a575f80fd5b505af1158015610f9c573d5f803e3d5ffd5b50505f600955505050505050565b5f815f03610fb957505f919050565b81600103610fe857507f2098f5fb9e239eab3ceac3f27b81e481dc3124d55ffed523a839ee8446b64864919050565b8160020361101757507f1069673dcdb12263df301a6ff584a7ec261a44cb9dc68df067a4774460b1f1e1919050565b8160030361104657507f18f43331537ee2af2e3d758d50f72106467c6eea50371dd528d57eb2b856d238919050565b8160040361107557507f07f9d837cb17b0d36320ffe93ba52345f1b728571a568265caac97559dbc952a919050565b816005036110a457507f2b94cf5e8746b3f5c9631f4c5df32907a699c58c94b2ad4d7b5cec1639183f55919050565b816006036110d357507f2dee93c5a666459646ea7d22cca9e1bcfed71e6951b953611d11dda32ea09d78919050565b8160070361110257507f078295e5a22b84e982cf601eb639597b8b0515a88cb5ac7fa8a4aabe3c87349d919050565b8160080361113157507f2fa5e5f18f6027a6501bec864564472a616b2e274a41211a444cbe3a99f3cc61919050565b8160090361116057507f0e884376d0d8fd21ecb780389e941f66e45e7acce3e228ab3e2156a614fcd747919050565b81600a0361118f57507f1b7201da72494f1e28717ad1a52eb469f95892f957713533de6175e5da190af2919050565b81600b036111be57507f1f8d8822725e36385200c0b201249819a6e6e1e4650808b5bebc6bface7d7636919050565b81600c036111ed57507f2c5d82f66c914bafb9701589ba8cfcfb6162b0a12acf88a8d0879a0471b5f85a919050565b81600d0361121c57507f14c54148a0940bb820957f5adf3fa1134ef5c4aaa113f4646458f270e0bfbfd0919050565b81600e0361124b57507f190d33b12f986f961e10c0ee44d8b9af11be25588cad89d416118e4bf4ebe80c919050565b81600f0361127a57507f22f98aa9ce704152ac17354914ad73ed1167ae6596af510aa5b3649325e06c92919050565b816010036112a957507f2a7c7c9b6ce5880b9f6f228d72bf6a575a526f29c66ecceef8b753d38bba7323919050565b816011036112d857507f2e8186e558698ec1c67af9c14d463ffc470043c9c2988b954d75dd643f36b992919050565b8160120361130757507f0f57c5571e9a4eab49e2c8cf050dae948aef6ead647392273546249d1c1ff10f919050565b8160130361133657507f1830ee67b5fb554ad5f63d4388800e1cfe78e310697d46e43c9ce36134f72cca919050565b8160140361136557507f2134e76ac5d21aab186c2be1dd8f84ee880a1e46eaf712f9d371b6df22191f3e919050565b8160150361139457507f19df90ec844ebc4ffeebd866f33859b0c051d8c958ee3aa88f8f8df3db91a5b1919050565b816016036113c357507f18cca2a66b5c0787981e69aefd84852d74af0e93ef4912b4648c05f722efe52b919050565b816017036113f257507f2388909415230d1b4d1304d2d54f473a628338f2efad83fadf05644549d2538d919050565b8160180361142157507f27171fb4a97b6cc0e9e8f543b5294de866a2af2c9c8d0b1d96e673e4529ed540919050565b8160190361145057507f2ff6650540f629fd5711a0bc74fc0d28dcb230b9392583e5f8d59696dde6ae21919050565b81601a0361147f57507f120c58f143d491e95902f7f5277778a2e0ad5168f6add75669932630ce611518919050565b81601b036114ae57507f1f21feb70d3f21b07bf853d5e5db03071ec495a0a565a21da2d665d279483795919050565b81601c036114dd57507f24be905fa71335e14c638cc0f66a8623a826e768068a9e968bb1a1dde18a72d2919050565b81601d0361150c57507f0f8666b62ed17491c50ceadead57d4cd597ef3821d65c328744c74e553dac26d919050565b81601e0361153b57507f0918d46bf52d98b034413f4a1a1c41594e7a7a3f6ae08cb43d1a2a230e1959ef919050565b81601f0361156a57507f1bbeb01b4c479ecde76917645e404dfa2e26f90d0afc5a65128513ad375c5ff2919050565b8160200361159957507f2f68a1c58e257e42a17a6c61dff5551ed560b9922ab119d5ac8e184c9734ead9919050565b816021036115c857507f1102d2f8db05e4af4842e8ad3d85ed45eb28447eb7212235a2281d5ab5d81d11919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610721565b60608167ffffffffffffffff81111561162157611621612455565b60405190808252806020026020018201604052801561164a578160200160208202803683370190505b5090505f5b828110156116b95761168784848381811061166c5761166c612469565b905060200201355f9081526005602052604090205460ff1690565b156116b15760018282815181106116a0576116a0612469565b911515602092830291909101909101525b60010161164f565b5092915050565b6116c8611a43565b6001600160a01b0381166116f157604051631e4fbdf760e01b81525f6004820152602401610721565b610ed681611a70565b600a54611707904761220d565b82111561177c5760405162461bcd60e51b815260206004820152603e60248201527f6e6f7420656e6f7567682065746820696e20636f6e74726163742028636f6e7360448201527f69646572696e672065746850656e64696e675769746864726177616c732900006064820152608401610721565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146117c45760405162461bcd60e51b815260040161072190612220565b600c546117d9906001600160a01b0316611fe0565b6118617f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015611838573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061185c9190612268565b611fe0565b600c5460408051636e296e4560e01b815290516001600160a01b03928316927f00000000000000000000000000000000000000000000000000000000000000001691636e296e459160048083019260209291908290030181865afa1580156118cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118ef9190612268565b6001600160a01b0316146119155760405162461bcd60e51b815260040161072190612283565b600c546040805160048082526024820183526020820180516001600160e01b03166339da4b5560e01b1790529151635f7b157760e01b81527f0000000000000000000000000000000000000000000000000000000000000000936001600160a01b0380861694635f7b1577948994611997949093169285928a91339101612414565b5f604051808303818588803b1580156119ae575f80fd5b505af11580156119c0573d5f803e3d5ffd5b5050505050505050565b5f815f036119d957505f919050565b60035463ffffffff16805b63ffffffff81165f908152600260205260409020548403611a09575060019392505050565b8063ffffffff165f03611a1a5750601e5b80611a248161247d565b9150508163ffffffff168163ffffffff16036119e457505f9392505050565b600b546001600160a01b03163314610abd5760405163118cdaa760e01b8152336004820152602401610721565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b600260045403611ae457604051633ee5aeb560e01b815260040160405180910390fd5b6002600455565b60408051600480825260a082019092526060915f919060208201608080368337019050509050855f1b815f81518110611b2657611b26612469565b602002602001018181525050845f1b81600181518110611b4857611b48612469565b602090810291909101015280516001600160a01b0385169082906002908110611b7357611b73612469565b602002602001018181525050825f1b81600381518110611b9557611b95612469565b602090810291909101015295945050505050565b3415611c155760405162461bcd60e51b815260206004820152603560248201527f4d6573736167652076616c756520697320737570706f73656420746f206265206044820152747a65726f20666f722045544820696e7374616e636560581b6064820152608401610721565b600a547f0000000000000000000000000000000000000000000000000000000000000000908190611c46904761220d565b10611cc657604080516001600160a01b0385168152602081018490527f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65910160405180910390a16040516001600160a01b0384169082156108fc029083905f818181858888f19350505050158015611cc0573d5f803e3d5ffd5b50505050565b604080516001600160a01b0385168152602081018490527f39d9cf4ffb93650d8ce789639cb8cf3c8d7b039e1f9795c038af55b4ae643fca910160405180910390a1604080516060810182526001600160a01b038581168252602080830185815260018486018181525f8981526008909452958320945185546001600160a01b0319169416939093178455519183019190915591516002909101805460ff191691151591909117905560098054839290611d819084906122e0565b9091555050505050565b6003545f8054909163ffffffff640100000000909104811691611db0911660026125aa565b63ffffffff168163ffffffff1603611e235760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610721565b80835f80805b5f5463ffffffff9081169082161015611ebf57611e476002866125da565b63ffffffff165f03611e8357839250611e658163ffffffff16610faa565b63ffffffff82165f9081526001602052604090208590559150611e9e565b63ffffffff81165f9081526001602052604090205492508391505b611ea88383610907565b9350611eb56002866125fc565b9450600101611e29565b506003545f90601e90611ed99063ffffffff16600161261e565b611ee391906125da565b6003805463ffffffff191663ffffffff83169081179091555f9081526002602052604090208590559050611f1886600161261e565b6003805463ffffffff929092166401000000000267ffffffff000000001990921691909117905550939695505050505050565b7f00000000000000000000000000000000000000000000000000000000000000003414610abd5760405162461bcd60e51b815260206004820152603860248201527f506c656173652073656e6420606d697844656e6f6d696e6174696f6e6020455460448201527f4820616c6f6e672077697468207472616e73616374696f6e00000000000000006064820152608401610721565b6040516001600160a01b0382166024820152610ed69060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b179052610ed6815f6a636f6e736f6c652e6c6f6790505f80835160208501845afa505050565b5f60208284031215612056575f80fd5b5035919050565b5f806040838503121561206e575f80fd5b50508035926020909101359150565b6001600160a01b0381168114610ed6575f80fd5b5f805f805f8060a087890312156120a6575f80fd5b86359550602087013594506040870135935060608701356120c68161207d565b9250608087013567ffffffffffffffff808211156120e2575f80fd5b818901915089601f8301126120f5575f80fd5b813581811115612103575f80fd5b8a6020828501011115612114575f80fd5b6020830194508093505050509295509295509295565b5f6020828403121561213a575f80fd5b813561098f8161207d565b5f8060208385031215612156575f80fd5b823567ffffffffffffffff8082111561216d575f80fd5b818501915085601f830112612180575f80fd5b81358181111561218e575f80fd5b8660208260051b85010111156121a2575f80fd5b60209290920196919550909350505050565b602080825282518282018190525f9190848201906040850190845b818110156121ed5783511515835292840192918401916001016121cf565b50909695505050505050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156107ed576107ed6121f9565b60208082526028908201527f66756e6374696f6e206e6f742063616c6c6564206279206c315363726f6c6c4d60408201526732b9b9b2b733b2b960c11b606082015260800190565b5f60208284031215612278575f80fd5b815161098f8161207d565b6020808252603d908201527f636f6e7472616374206d6573736167696e672066726f6d204c32206973206e6f60408201527f7420746865206c32546f61646e61646f5363726f6c6c41646472657373000000606082015260800190565b808201808211156107ed576107ed6121f9565b6040810181835f5b600281101561231a5781518352602092830192909101906001016122fb565b50505092915050565b5f60208284031215612333575f80fd5b5051919050565b60408152826040820152828460608301375f606084830101525f601f19601f850116820160608101602060608584030160208601528186518084526080850191506020880194505f93505b808410156123a55784518252938201936001939093019290820190612385565b5098975050505050505050565b5f602082840312156123c2575f80fd5b8151801515811461098f575f80fd5b5f81518084525f5b818110156123f5576020818501810151868301820152016123d9565b505f602082860101526020601f19601f83011685010191505092915050565b5f60018060a01b03808816835286602084015260a0604084015261243b60a08401876123d1565b606084019590955292909216608090910152509392505050565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f63ffffffff821680612492576124926121f9565b5f190192915050565b600181815b808511156124d8578163ffffffff048211156124be576124be6121f9565b808516156124cb57918102915b93841c93908002906124a0565b509250929050565b5f826124ee575060016107ed565b816124fa57505f6107ed565b8160018114612510576002811461251a5761254b565b60019150506107ed565b60ff84111561252b5761252b6121f9565b6001841b915063ffffffff821115612545576125456121f9565b506107ed565b5060208310610133831016604e8410600b8410161715612582575081810a63ffffffff81111561257d5761257d6121f9565b6107ed565b61258c838361249b565b8063ffffffff048211156125a2576125a26121f9565b029392505050565b5f63ffffffff6125be8185168285166124e0565b949350505050565b634e487b7160e01b5f52601260045260245ffd5b5f63ffffffff808416806125f0576125f06125c6565b92169190910692915050565b5f63ffffffff80841680612612576126126125c6565b92169190910492915050565b63ffffffff8181168382160190808211156116b9576116b96121f956fea26469706673582212200ed12fc1d4fbd9f65654f092d62e7e42d794ff5f88fc39ad79df3e5a0ce685f764736f6c63430008170033";

type ToadnadoL1ConstructorParams =
  | [linkLibraryAddresses: ToadnadoL1LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ToadnadoL1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ToadnadoL1__factory extends ContractFactory {
  constructor(...args: ToadnadoL1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ToadnadoL1__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ToadnadoL1LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$75f79a42d9bcbdbb69ad79ebd80f556f39\\$__", "g"),
      linkLibraryAddresses["poseidon-solidity/PoseidonT3.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    _denomination: BigNumberish,
    _merkleTreeHeight: BigNumberish,
    _l1ScrollMessenger: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _verifier,
      _denomination,
      _merkleTreeHeight,
      _l1ScrollMessenger,
      overrides || {}
    );
  }
  override deploy(
    _verifier: AddressLike,
    _denomination: BigNumberish,
    _merkleTreeHeight: BigNumberish,
    _l1ScrollMessenger: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _verifier,
      _denomination,
      _merkleTreeHeight,
      _l1ScrollMessenger,
      overrides || {}
    ) as Promise<
      ToadnadoL1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ToadnadoL1__factory {
    return super.connect(runner) as ToadnadoL1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ToadnadoL1Interface {
    return new Interface(_abi) as ToadnadoL1Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): ToadnadoL1 {
    return new Contract(address, _abi, runner) as unknown as ToadnadoL1;
  }
}

export interface ToadnadoL1LibraryAddresses {
  ["poseidon-solidity/PoseidonT3.sol:PoseidonT3"]: string;
}
